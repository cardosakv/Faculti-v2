<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MessageContainer.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAXIAAABiCAYAAABNhVgmAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAANjSURBVHhe7dq9bhxlAIXhKVNSpqTkEnIJ3EQkGiRKSuhy
        ARSIgj51alpKWu4gqzC7M7szBiOFPykF7NqHIvYqZbwneo70yJL9zZSvVp93MDOzD3CbzebRdj58Ns5X
        34/z+vN2Xv8F4P1Lg59vp/0Xm831R8n0uzfu90+OD77aTlev774QgIewHIN+9ec4L8sv0+HT5Pr8xt3h
        6+20Xp9/EQAX4PoY82+T7bd3+iQu4gAF9utv47Q+Tb5vd3snvs73DgNwkcZ5vdocDo+T8dOVyvLldl7+
        OXcYgMt0+kJKMj4Mu3l9ce4QAJfr9I2WZPx0P76+PHcIgEu2/JWMD8P5AwBcumRcyAFaJeNCDtAqGRdy
        gFbJuJADtErGhRygVTIu5ACtknEhB2iVjAs5QKtkXMgBWiXjQg7QKhkXcoBWybiQA7RKxoUcoFUyLuQA
        rZJxIQdolYwLOUCrZFzIAVol40IO0CoZF3KAVsm4kAO0SsaFHKBVMi7kAK2ScSEHaJWMCzlAq2RcyAFa
        JeNCDtAqGRdygFbJuJADtErGhRygVTIu5ACtknEhB2iVjAs5QKtkXMgBWiXjQg7QKhkXcoBWybiQA7RK
        xoUcoFUyLuQArZJxIQdolYwLOUCrZFzIAVol40IO0CoZF3KAVsm4kAO0SsaFHKBVMi7kAK2ScSEHaJWM
        CzlAq2RcyAFaJeNCDtAqGRdygFbJuJADtErGhRygVTIu5ACtknEhB2iVjAs5QKtkXMgBWiXjQg7QKhkX
        coBWybiQA7RKxoUcoFUyLuQArZJxIQdolYwLOUCrZFzIAVol40IO0CoZF3KAVsm4kAO0SsaFHKBVMi7k
        AK2ScSEHaJWMCzlAq2RcyAFaJeNCDtAqGRdygFbJuJADtErGhRygVTIu5ACtknEhB2iVjN+EfL37RwAu
        2zgtb5LxY8inqx/HeTl7EIDLNO7Xl8n4MIy7w1fHX765ewiAS3Xz4ft5Mj4M8zx/fPyIfn3/IAAXaVqv
        x/3+STJ+u3G3/3w7Lb+ffQCAizFO6+tX8/JN8v32bu7Kp/WPcw8C8PDG6fD3sdM/bTabR0n3/Y279dnx
        8K93Hwbg4RzjfXOdst2v370z4v9vt1s/2c3ri9N/RM+9EID3Z5yW3fHnD/fuxM3M7EPYMPwHkK0Lk2n4
        Dp4AAAAASUVORK5CYII=
</value>
  </data>
  <data name="MessageLabel.Text" xml:space="preserve">
    <value>Basta guys inom kayo ng isang basong tubig and this is an example of a chat. Yes or yes. Kimi no toriku ni natte shimai yokitto. Basta guys inom kayo ng isang basong tubig and this is an example of a chat. Yes or yes. Kimi no toriku ni natte shimai yokitto.
</value>
  </data>
</root>