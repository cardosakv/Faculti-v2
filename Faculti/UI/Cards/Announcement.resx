<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AnnouncementBodyPanel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>